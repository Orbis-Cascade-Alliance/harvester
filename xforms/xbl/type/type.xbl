<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xbl="http://www.w3.org/ns/xbl"
	xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:res="http://www.w3.org/2005/sparql-results#"
	xmlns:harvester="https://github.com/Orbis-Cascade-Alliance/harvester">
	<xbl:binding id="harvester-type" element="harvester|type">
		<xbl:template>
			<xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
				<xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
				<xforms:group xxbl:scope="inner">
					<xforms:var name="binding" as="node()?">
						<xxforms:sequence select="." xxbl:scope="outer"/>
					</xforms:var>

					<xforms:action ev:event="xforms-enabled" ev:target="#observer">
						<xforms:setvalue ref="instance('search-query')" value="$binding/text()"/>
						<xforms:setvalue ref="instance('control-instance')/repository" value="$binding/parent::node()/@repository"/>
					</xforms:action>

					<div class="term">
						<h4>
							<xforms:output ref="$binding"/>
						</h4>
						<xforms:group ref=".[string-length($binding/@uri) &gt; 0]">
							<xforms:trigger appearance="minimal">
								<xforms:label>
									<xforms:output ref="$binding/@uri"/>
									<span class="glyphicon glyphicon-new-window"/>
								</xforms:label>
								<xforms:load ev:event="DOMActivate" resource="{$binding/@uri}" show="new"/>
							</xforms:trigger>
							<xforms:trigger appearance="minimal">
								<xforms:label>
									<span class="glyphicon glyphicon-remove"/>
								</xforms:label>
								<xforms:action ev:event="DOMActivate">
									<!-- set the @uri value to empty to show the lookup mechanism again and reset all relevant values -->
									<xforms:setvalue ref="$binding/@uri"/>
									<xforms:setvalue ref="instance('control-instance')/uri"/>
									<xforms:setvalue ref="instance('control-instance')/definition"/>
									<xforms:delete nodeset="instance('getty-response')/*"/>

									<!-- TODO: SPARQL/Update to remove Term-URI pair -->
									<xforms:var name="hash"
										select="concat(instance('config')/url, 'vocab/', digest(concat(instance('control-instance')/repository, ':', $binding), 'MD5', 'hex'))"/>
									<xforms:setvalue ref="instance('control-instance')/sparql-service" value="instance('config')/vocab_sparql/update"/>
									<xforms:setvalue ref="instance('sparqlUpdate')"
										value="replace(instance('sparqlUpdate-templates')/query[@id='delete-vocab'], 'URI', $hash)"/>
									<xforms:send submission="update-graph"/>
								</xforms:action>
							</xforms:trigger>
						</xforms:group>


						<xforms:group ref=".[not(string($binding/@uri))]">
							<div>
								<!--<radiogroup>
									<xforms:select1 ref="instance('interface-type')" appearance="full">
										<xforms:label>Vocabulary</xforms:label>
										<xforms:item>
											<xforms:label>Getty AAT</xforms:label>
											<xforms:value>aat</xforms:value>
										</xforms:item>
										<xforms:item>
											<xforms:label>Ignore</xforms:label>
											<xforms:value>ignore</xforms:value>
										</xforms:item>
										<xforms:action ev:event="xforms-value-changed">
											<xforms:action if=". = 'aat'">
												<xforms:toggle case="aat-search"/>
											</xforms:action>
											
											<xforms:action if=". = 'ignore'">
												<xforms:setvalue ref="instance('control-instance')/uri"/>
												<xforms:setvalue ref="instance('search-query')"/>			
												<xforms:setvalue ref="instance('control-instance')/definition"/>
												<xforms:toggle case="ignore"/>
											</xforms:action>
										</xforms:action>
									</xforms:select1>
								</radiogroup>-->
								<xforms:switch>
									<xforms:case id="aat-search">
										<div>
											<xforms:input ref="instance('search-query')">
												<xforms:label>Search AAT</xforms:label>
											</xforms:input>
											<xforms:trigger>
												<xforms:action ev:event="DOMActivate">
													<xforms:var name="search_query" select="string-join(tokenize(instance('search-query'), ' '), ' AND ')"/>
													<xforms:setvalue ref="instance('sparqlQuery')"
														value="normalize-space(replace(instance('sparqlQueryTemplate'), 'SEARCH_QUERY', $search_query))"/>
													<xforms:send submission="query-getty"/>
												</xforms:action>
												<xforms:label>Search AAT</xforms:label>
											</xforms:trigger>
										</div>

										<xforms:group ref=".[string-length(instance('control-instance')/search-results)] &gt; 0">
											<p class="text-muted">
												<xforms:output ref="instance('control-instance')/search-results"/>
											</p>
										</xforms:group>

										<xforms:group ref=".[count(instance('getty-response')//res:result) &gt; 0]">
											<xforms:select1 ref="instance('control-instance')/uri" appearance="compact" length="20">
												<xforms:label>Term</xforms:label>
												<xforms:itemset nodeset="instance('getty-response')//res:result">
													<xforms:label ref="res:binding[@name='label']/res:literal"/>
													<xforms:value ref="res:binding[@name='c']/res:uri"/>
												</xforms:itemset>

												<!-- update the scopeNote on value-changed -->
												<xforms:setvalue ref="instance('control-instance')/definition"
													value="instance('getty-response')//res:result[res:binding[@name='c']/res:uri =
													instance('control-instance')/uri]/res:binding[@name='def']/res:literal"
													ev:event="xforms-value-changed"/>
											</xforms:select1>
											<xforms:trigger>
												<xforms:label>Select</xforms:label>
												<xforms:action ev:event="DOMActivate">
													<!-- set @uri, which switches to other interface -->
													<xforms:setvalue ref="$binding/@uri" value="instance('control-instance')/uri"/>
													<xforms:setvalue ref="$binding/@new" value="true()"/>
													<xforms:setvalue ref="$binding/@prefLabel"
														value="instance('getty-response')//res:result[res:binding[@name='c']/res:uri =
														instance('control-instance')/uri]/res:binding[@name='label']/res:literal"/>

													<!-- TODO: SPARQL/Update to insert Term-URI pair -->
													<!-- create a unique id for the URI to avoid blank nodes -->
													<xforms:var name="hash"
														select="concat(instance('config')/url, 'vocab/', digest(concat(instance('control-instance')/repository, ':', $binding), 'MD5', 'hex'))"/>
													<xforms:var name="match" select="$binding/@uri"/>
													<xforms:var name="label" select="$binding"/>

													<!-- set the SPARQL/Update to insert the vocabulary -->
													<xforms:setvalue ref="instance('control-instance')/sparql-service"
														value="instance('config')/vocab_sparql/update"/>
													<xforms:setvalue ref="instance('sparqlUpdate')"
														value="replace(replace(replace(replace(instance('sparqlUpdate-templates')/query[@id='insert-vocab'], 'URI', $hash), 'LABEL', $label), 'REPO', instance('control-instance')/repository), 'MATCH', $match)"/>
													<xforms:send submission="update-graph"/>
												</xforms:action>
											</xforms:trigger>

											<xforms:group ref="instance('control-instance')[string-length(definition) &gt; 0]">
												<div>
													<xforms:output ref="definition">
														<xforms:label>Definition</xforms:label>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:label>
															<span class="glyphicon glyphicon-new-window"/>
														</xforms:label>
														<xforms:hint ref="uri"/>
														<xforms:load ev:event="DOMActivate" resource="{uri}" show="new"/>
													</xforms:trigger>
												</div>
											</xforms:group>
										</xforms:group>
									</xforms:case>
									<xforms:case id="ignore"/>
								</xforms:switch>
							</div>
						</xforms:group>

						<hr/>
					</div>


					<!--<xforms:output ref="instance('sparqlQuery')"/>
					<fr:xforms-inspector xmlns:fr="http://orbeon.org/oxf/xml/form-runner" />-->
					<!-- ***************** MODEL ***************-->
					<xforms:model id="type-model">
						<xforms:instance id="config">
							<xi:include href="../../../config.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns=""/>
						</xforms:instance>

						<!-- instances -->
						<xforms:instance id="control-instance">
							<control xmlns="">
								<local-message/>
								<uri/>
								<definition/>
								<search-results/>
								<repository/>
								<sparql-service/>
							</control>
						</xforms:instance>

						<!-- Instances containing the query string -->
						<xforms:instance id="search-query">
							<query xmlns=""/>
						</xforms:instance>

						<!-- interface type radio button -->
						<xforms:instance id="interface-type">
							<interface xmlns="">aat</interface>
						</xforms:instance>

						<xforms:instance id="sparqlQueryTemplate">
							<query><![CDATA[PREFIX gvp: <http://vocab.getty.edu/ontology#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX luc: <http://www.ontotext.com/owlim/lucene#>
PREFIX aat: <http://vocab.getty.edu/aat/>
SELECT ?c ?label ?def WHERE {
?c a gvp:Concept ;
skos:inScheme aat: ;
gvp:prefLabelGVP/xl:literalForm ?label ;
luc:term "SEARCH_QUERY" FILTER langMatches(lang(?label), "en")
OPTIONAL {?c skos:scopeNote ?note .
?note rdf:value ?def FILTER langMatches(lang(?def), "en")}} LIMIT 100]]>
							</query>
						</xforms:instance>

						<xforms:instance id="sparqlUpdate-templates">
							<queries xmlns="">
								<query id="delete-vocab"><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
DELETE {?s ?p ?o} WHERE { 
?s ?p ?o . FILTER (?s = <URI>)
}]]></query>
								<query id="insert-vocab"><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX dcam:	<http://purl.org/dc/dcam/>
PREFIX edm:	<http://www.europeana.eu/schemas/edm/>
PREFIX xsd:	<http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs:	<http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
INSERT DATA
{
  <URI> rdf:type skos:Concept ; 
  		rdfs:label "LABEL" ;
  		dcterms:source "REPO" ;
  		skos:exactMatch <MATCH> ;
  		dcam:memberOf <http://vocabs.getty.edu/aat/>
}]]></query>
							</queries>
						</xforms:instance>

						<xforms:instance id="sparqlQuery">
							<query xmlns=""/>
						</xforms:instance>

						<xforms:instance id="sparqlUpdate">
							<query xmlns=""/>
						</xforms:instance>

						<xforms:instance id="getty-response">
							<sparql xmlns="http://www.w3.org/2005/sparql-results#"/>
						</xforms:instance>

						<!-- submissions -->
						<!-- lookup -->
						<xforms:submission id="query-getty" action="http://vocab.getty.edu/sparql?query={encode-for-uri(instance('sparqlQuery'))}"
							ref="instance('getty-response')" replace="instance" method="get">
							<xforms:header>
								<xforms:name>User-Agent</xforms:name>
								<xforms:value>XForms/harvester.orbiscascade.org</xforms:value>
							</xforms:header>
							<xforms:header>
								<xforms:name>Accept</xforms:name>
								<xforms:value>application/sparql-results+xml</xforms:value>
							</xforms:header>
							<xforms:message ev:event="xforms-submit-error" level="modal">
								<!--SPARQL query failed.-->
								<xforms:output value="event('response-headers')"/>
							</xforms:message>
							<!-- set the search results text -->
							<xforms:action ev:event="xforms-submit-done">
								<xforms:var name="total" select="count(instance('getty-response')//res:result)"/>
								<xforms:setvalue if="$total = 0" ref="instance('control-instance')/search-results">No results found for query.</xforms:setvalue>
								<xforms:setvalue if="$total &gt; 0 and $total &lt;= 100" ref="instance('control-instance')/search-results"
									value="concat('Displaying ', $total, ' result(s).')"/>
								<xforms:setvalue if="$total &gt; 100" ref="instance('control-instance')/search-results"
									value="concat('Displaying first 100 of ', $total, ' result(s).')"/>
							</xforms:action>
						</xforms:submission>

						<!-- update vocab graph -->
						<xforms:submission id="update-graph" action="{instance('control-instance')/sparql-service}" ref="instance('sparqlUpdate')"
							serialization="text/plain" replace="none" method="post" mediatype="application/sparql-update">
							<xforms:action ev:event="xforms-submit-error">
								<xforms:message level="modal">SPARQL update failed.</xforms:message>
							</xforms:action>
						</xforms:submission>
					</xforms:model>
				</xforms:group>
			</xforms:group>
		</xbl:template>
	</xbl:binding>
</xbl:xbl>
