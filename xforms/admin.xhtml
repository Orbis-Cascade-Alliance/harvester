<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:dcterms="http://purl.org/dc/terms/" xmlns:oai="http://www.openarchives.org/OAI/2.0/" xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
	xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:ore="http://www.openarchives.org/ore/terms/" xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:doap="http://usefulinc.com/ns/doap#" xmlns:res="http://www.w3.org/2005/sparql-results#">
	<head>
		<title>Orbis Cascade Harvester: Admin</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css" />
		<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
		<script type="text/javascript" src="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico" />
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png" />
		<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Gentium+Book+Basic:400,700" />
		<link rel="stylesheet" type="text/css" href="/apps/harvester/xforms/css/style.css" />

		<xforms:model>
			<xforms:instance id="control-instance">
				<controls xmlns="">
					<status></status>
					<set-url></set-url>
					<repository/>
				</controls>
			</xforms:instance>

			<xforms:instance id="set-list" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dcterms="http://purl.org/dc/terms/"
					xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:ore="http://www.openarchives.org/ore/terms/" xmlns:foaf="http://purl.org/dc/terms/"
					xmlns:doap="http://usefulinc.com/ns/doap#"/>
			</xforms:instance>

			<xforms:instance id="controls">
				<controls xmlns="">
					<ark></ark>
					<repository></repository>
				</controls>
			</xforms:instance>

			<xforms:instance id="config" xxforms:exclude-result-prefixes="#all">
				<xi:include href="../config.xml"/>
			</xforms:instance>

			<xforms:instance id="dump" xxforms:exclude-result-prefixes="#all">
				<dump xmlns=""></dump>
			</xforms:instance>

			<xforms:instance id="feed" xxforms:exclude-result-prefixes="#all">
				<OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/"/>
			</xforms:instance>

			<xforms:instance id="rdf" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF/>
			</xforms:instance>

			<!-- sparql update -->
			<xforms:instance id="sparqlUpdate-templates">
				<queries xmlns="">
					<query id="purge-repositories">
						<![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX arch:	<http://purl.org/archival/vocab/arch#>
DELETE {?s ?p ?o} WHERE { ?s rdf:type arch:Archive . ?s ?p ?o }]]>
					</query>
					<query id="delete-set"><![CDATA[ PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX edm:	<http://www.europeana.eu/schemas/edm/>
PREFIX prov:	<http://www.w3.org/ns/prov#>
PREFIX dcmitype:	<http://purl.org/dc/dcmitype/>
DELETE {?s ?p ?o} WHERE {
?set a dcmitype:Collection FILTER (regex(str(?set), '%SETSPEC%') && strStarts(str(?set), '%SERVICE%'))
{?agg prov:wasDerivedFrom ?set ;
    edm:preview ?s . ?s ?p ?o}
UNION {?agg prov:wasDerivedFrom ?set ;
    edm:object ?s . ?s ?p ?o}
UNION {?s dcterms:isPartOf ?set . ?s ?p ?o }
UNION {?s prov:wasDerivedFrom ?set . ?s ?p ?o }
UNION {?set a dcmitype:Collection . ?s ?p ?o . FILTER (?s = ?set)}
}]]></query>
				</queries>
			</xforms:instance>

			<xforms:instance id="list-sets">
				<query>
					<![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX foaf:	<http://xmlns.com/foaf/0.1/>
PREFIX arch:	<http://purl.org/archival/vocab/arch#>
PREFIX edm:	<http://www.europeana.eu/schemas/edm/>
PREFIX dcmitype:	<http://purl.org/dc/dcmitype/>
PREFIX doap:	<http://usefulinc.com/ns/doap#>
PREFIX ore:	<http://www.openarchives.org/ore/terms/>

CONSTRUCT {
?set rdf:type dcmitype:Collection ; 
  dcterms:publisher ?publisher; 
  dcterms:title ?title ; 
  dcterms:publisher %PUB% ;
  doap:audience ?target ;
  foaf:name ?name ;
  dcterms:extent ?count
} WHERE {
?set a dcmitype:Collection ;
  dcterms:title ?title ;
  dcterms:publisher %PUB% .
  %PUB% foaf:name ?name 
 	{ 
      SELECT ?set ?target ( count(?cho) as ?count ) { 
   		?cho dcterms:isPartOf ?set .
		 ?agg a ore:Aggregation ;
			edm:aggregatedCHO ?cho ;
			doap:audience ?target
 		} GROUP BY ?set ?target
	}
} ORDER BY ?name ?title ?title]]>
				</query>
			</xforms:instance>

			<xforms:instance id="sparqlQuery">
				<query xmlns=""></query>
			</xforms:instance>

			<xforms:instance id="sparqlResponse">
				<sparql></sparql>
			</xforms:instance>

			<!-- ************************* BINDINGS ************************** -->
			<xforms:bind nodeset="instance('config')">
				<xforms:bind nodeset="codes">
					<xforms:bind nodeset="repository">
						<xforms:bind nodeset="@harvester-only" type="xs:boolean"/>
					</xforms:bind>
				</xforms:bind>
			</xforms:bind>

			<!-- ************************* SUBMISSIONS ************************** -->
			<xforms:submission id="get-repository-rdf" serialization="none" method="get" action="/harvester/repositories.rdf" replace="instance" instance="rdf">
				<xforms:header>
					<xforms:name>User-Agent</xforms:name>
					<xforms:value>XForms/harvester.orbiscascade.org</xforms:value>
				</xforms:header>
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to get repository RDF from NWDA.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<!-- first purge triples if the RDF has been successfully loaded -->
					<!-- submit SPARQL/Update to purge arch:Archive triples -->
					<xforms:setvalue ref="instance('sparqlQuery')" value="instance('sparqlUpdate-templates')/query[@id='purge-repositories']"/>
					<xforms:send submission="delete-graph"/>

					<xforms:action ev:event="xforms-submit-done">
						<!-- post RDF and then refresh the repository list -->
						<xforms:send submission="post-rdf"/>
					</xforms:action>

				</xforms:action>
			</xforms:submission>

			<xforms:submission id="post-rdf" action="{instance('config')/sparql/store}?default" ref="instance('rdf')" replace="none" method="post"
				mediatype="application/rdf+xml">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Successfully posted to endpoint.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Post to endpoint failed.</xforms:message>
			</xforms:submission>

			<!-- SPARQL queries -->
			<xforms:submission id="submit-sparqlQuery" action="{instance('config')/sparql/query}?query={encode-for-uri(instance('sparqlQuery'))}&amp;output=xml"
				ref="instance('sparqlResponse')" replace="instance" method="get">
				<xforms:message ev:event="xforms-submit-error" level="modal">SPARQL query failed.</xforms:message>
			</xforms:submission>

			<xforms:submission id="delete-graph" action="{instance('config')/sparql/update}" ref="instance('sparqlQuery')" serialization="text/plain"
				replace="none" method="post" mediatype="application/sparql-update">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">SPARQL update failed.</xforms:message>
				</xforms:action>
			</xforms:submission>

			<!-- ************************* XFORMS-MODEL-CONSTRUCT-DONE ************************** -->
			<!-- get the list of repositories from the SPARQL endpoint on xforms-model-construct-done -->
			<xforms:action ev:event="xforms-model-construct-done">
				<!-- get authentication roles -->
				<xforms:action if="xxforms:is-user-in-role('harvester-admin')">
					<xforms:setvalue ref="instance('sparqlQuery')" value="replace(instance('list-sets'), '%PUB%', '?pub')"/>
				</xforms:action>
				<xforms:action if="not(xxforms:is-user-in-role('harvester-admin'))">
					<xforms:insert context="instance('control-instance')" nodeset="status" position="after"
						origin="xxforms:call-xpl('oxf:/apps/harvester/xpl/get-authentication.xpl', 'dump', instance('dump'), 'data')"/>
					<xforms:setvalue ref="instance('control-instance')/repository" value="instance('control-instance')/request-security/role"/>
					
					<!-- set the repository based on whether or it is harvester-only -->
					<xforms:var name="pub" select="if (instance('config')/codes/repository[@marc=instance('control-instance')/repository]/@harvester-only = true()) then concat('&lt;', instance('config')/url, 'agency/', instance('control-instance')/repository, '&gt;') else concat('&lt;', instance('config')/production_server, 'contact#', instance('control-instance')/repository, '&gt;')"/>
					<xforms:setvalue ref="instance('sparqlQuery')" value="replace(instance('list-sets'), '%PUB%', $pub)"/>
				</xforms:action>
				
				<!-- get OAI-PMH sets -->
				<xforms:send submission="submit-sparqlQuery"/>
				<xforms:insert context="instance('set-list')" origin="instance('sparqlResponse')/*"/>
			</xforms:action>
		</xforms:model>
	</head>
	<body style="font-family:'Gentium Book Basic'">
		<div class="container">
			<xforms:group ref=".[string-length(instance('control-instance')/status) &gt; 0]">
				<div class="row">
					<div class="col-md-12">
						<div class="bg-info alert">
							<p>
								<span class="glyphicon glyphicon-info-sign"></span>
								<strong>Status:</strong>
								<xforms:output ref="instance('control-instance')/status"/>
							</p>
						</div>
					</div>
				</div>
			</xforms:group>
			<div class="row">
				<div class="col-md-6 banner">
					<img src="/apps/harvester/ui/images/header.jpg" style="max-height:100%;" alt="header-image" />
				</div>
				<div class="col-md-6 banner">
					<h1>HARVESTER</h1>
				</div>
			</div>
			<div class="row">
				<div class="col-md-12">
					<hr />
				</div>
			</div>
			<div class="row">
				<div class="col-md-9">
					<xforms:group ref="instance('set-list')">
						<xforms:group ref=".[count(dcmitype:Collection) &gt; 0]">
							<h2>Sets</h2>
							<table class="table">
								<thead>
									<tr>
										<th style="width:80%;font-weight:bold">Set</th>
										<th style="width:10%;font-weight:bold">Count</th>
										<th style="width:10%;font-weight:bold">Actions</th>
									</tr>
								</thead>
								<tbody>
									<xforms:repeat nodeset="dcmitype:Collection">
										<xforms:var name="uri" select="@rdf:about"/>
										<tr>
											<td>
												<h4>
													<xforms:output ref="dcterms:title"/>
												</h4>
												<div>
													<dl class="dl-horizontal">
														<dt>URI</dt>
														<dd>
															<xforms:trigger appearance="minimal">
																<xforms:label><xforms:output ref="$uri"/><span class="glyphicon glyphicon-new-window"
																	></span></xforms:label>
																<xforms:load ev:event="DOMActivate" resource="{$uri}" show="new"/>
															</xforms:trigger>
														</dd>
														<xforms:group ref=".[doap:audience='dpla' or doap:audience='primo']">
															<dt>View</dt>
															<dd>
																<xforms:group ref=".[doap:audience='dpla']">
																	<xforms:trigger appearance="minimal">
																		<xforms:label>DPLA View<span class="glyphicon glyphicon-new-window"
																			></span></xforms:label>
																		<xforms:load resource="{instance('config')/url}results?set={encode-for-uri($uri)}"
																			show="new" ev:event="DOMActivate"/>
																	</xforms:trigger>
																</xforms:group>
																<xforms:group ref=".[doap:audience='dpla' and doap:audience='primo']">
																	<span>, </span>
																</xforms:group>
																<xforms:group ref=".[doap:audience='primo']">
																	<xforms:trigger appearance="minimal">
																		<xforms:label>Primo View<span class="glyphicon glyphicon-new-window"
																			></span></xforms:label>
																		<xforms:load
																			resource="{instance('config')/url}results?set={encode-for-uri($uri)}&amp;model=primo"
																			show="new" ev:event="DOMActivate"/>
																	</xforms:trigger>
																</xforms:group>
															</dd>
														</xforms:group>
														<dt>Archives West</dt>
														<dd>
															<xforms:group ref=".[doap:audience='aw']">
																<span>Yes</span>
															</xforms:group>
															<xforms:group ref=".[not(doap:audience='aw')]">
																<span>No</span>
															</xforms:group>
														</dd>
														<dt>Publisher</dt>
														<dd>
															<xforms:group ref=".[string-length(dcterms:publisher/@rdf:resource) &gt; 0]">
																<xforms:trigger appearance="minimal">
																	<xforms:label>
																		<xforms:output ref="foaf:name"/>
																		<span class="glyphicon glyphicon-new-window"></span></xforms:label>
																	<xforms:load resource="{dcterms:publisher/@rdf:resource}" show="new" ev:event="DOMActivate"
																	/>
																</xforms:trigger>
															</xforms:group>
															<xforms:group ref=".[string-length(dcterms:publisher/@rdf:resource) = 0]">
																<xforms:output ref="foaf:name"/>
															</xforms:group>
														</dd>
													</dl>
												</div>
											</td>
											<td>
												<xforms:output value="format-number(dcterms:extent, '###,###')"/>
											</td>
											<td>
												<xforms:trigger appearance="minimal">
													<xforms:label><span class="glyphicon glyphicon-remove"></span></xforms:label>
													<xforms:hint>Delete Set</xforms:hint>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/set-url" value="$uri"/>
														<xforms:dispatch target="delete-set-dialog" name="fr-show"/>
													</xforms:action>
												</xforms:trigger>
											</td>
										</tr>
									</xforms:repeat>
								</tbody>
							</table>
						</xforms:group>
						<xforms:group ref=".[count(dcmitype:Collection) = 0]">
							<p>No sets found in SPARQL endpoint.</p>
						</xforms:group>
					</xforms:group>
					<!--<fr:xforms-inspector/>-->
				</div>
				<div class="col-md-3">
					<h2>Actions</h2>
					<ul>
						<xforms:group ref=".[xxforms:is-user-in-role('harvester-admin')]">
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label><span class="glyphicon glyphicon-refresh"></span>Refresh Repository Metadata</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<!-- then get repository RDF from NWDA and repost to SPARQL endpoint -->
										<xforms:send submission="get-repository-rdf"/>
									</xforms:action>
								</xforms:trigger>
							</li>
						</xforms:group>

						<!--<li>
							<a href="vocabularies"><span class="glyphicon glyphicon-import"></span>Ingest Vocabulary RDF</a>
						</li>-->
						<li>
							<a href="import"><span class="glyphicon glyphicon-import"></span>Import OAI-PMH</a>
						</li>
						<xforms:group ref=".[xxforms:is-user-in-role('harvester-admin') or instance('config')/codes/repository[@marc = instance('control-instance')/repository]/@harvester-only=true()]">
							<li>
								<a href="edit"><span class="glyphicon glyphicon-pencil"></span>Edit Repository Metadata</a>
							</li>
						</xforms:group>
					</ul>
				</div>
			</div>
		</div>
		<xi:include href="components/footer.xml"/>
		<fr:alert-dialog id="delete-set-dialog">
			<fr:label>Delete Set</fr:label>
			<fr:message>Do you wish to purge all Cultural Heritage Objects associated with this set?</fr:message>
			<fr:negative-choice>
				<fr:label>No</fr:label>
			</fr:negative-choice>
			<fr:positive-choice>
				<fr:label>Yes</fr:label>
				<xforms:action ev:event="DOMActivate">
					<!-- isolate the setSpec and OAI-PMH service for deleting the set based on regex instead of precise URI match -->
					<xforms:var name="service" select="substring-before(instance('control-instance')/set-url, '?')"/>
					<xforms:var name="setSpec" select="tokenize(substring-after(instance('control-instance')/set-url, '?'), '&amp;')[contains(., 'set=')]"/>
					
					<xforms:setvalue ref="instance('sparqlQuery')"
						value="replace(replace(instance('sparqlUpdate-templates')/query[@id='delete-set'], '%SETSPEC%', $setSpec), '%SERVICE%', $service)"/>
					<xforms:send submission="delete-graph"/>
					<xforms:action ev:event="xforms-submit-done">
						<xforms:setvalue ref="instance('control-instance')/status">Set successfully deleted set from triplestore.</xforms:setvalue>
						<!-- refresh the set list -->
						<xforms:delete nodeset="instance('set-list')/*"/>
						<xforms:var name="pub"
							select="if (xxforms:is-user-in-role('harvester-admin')) then '?pub' else concat('&lt;', instance('config')/production_server, 'contact#', instance('control-instance')/request-security/role, '&gt;')"/>
						<xforms:setvalue ref="instance('sparqlQuery')" value="replace(instance('list-sets'), '%PUB%', $pub)"/>
						<xforms:send submission="submit-sparqlQuery"/>
						<xforms:action ev:event="xforms-submit-done" xxforms:iterate="instance('sparqlResponse')//res:result">
							<xforms:insert context="instance('set-list')" nodeset="./child::node()[last()]" origin="instance('set-template')"/>
							<xforms:setvalue ref="instance('set-list')/set[last()]/uri" value="context()/res:binding[@name='set']/res:uri"/>
							<xforms:setvalue ref="instance('set-list')/set[last()]/title" value="context()/res:binding[@name='title']/res:literal"/>
							<xforms:setvalue ref="instance('set-list')/set[last()]/publisher_uri" value="context()/res:binding[@name='pub']/res:uri"/>
							<xforms:setvalue ref="instance('set-list')/set[last()]/publisher_name" value="context()/res:binding[@name='name']/res:literal"/>
							<xforms:setvalue ref="instance('set-list')/set[last()]/count" value="context()/res:binding[@name='count']/res:literal"/>
						</xforms:action>
					</xforms:action>
				</xforms:action>
			</fr:positive-choice>
		</fr:alert-dialog>
	</body>
</html>
